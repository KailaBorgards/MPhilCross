

######## INSPECT DATA ###########
#################################

nrow(data_dwi)
ncol(data_dwi) #176             
colnames(data_dwi)
summary(data_dwi)
describe(data_dwi)

## covariance  
sapply(data_dwi, class)  # Returns the class of each column
# Only non-numeric columns
sapply(data_dwi, class)[sapply(data_dwi,class)=="character"]

######## TRANSFORM NUMERIC DATA ###########
###########################################
'In green we have the exact question content - to be deleted later'

## Sex
data_dwi$sex # Print
data_dwi$sex <- ifelse(data_dwi$sex == "F", 1, 0) # Transform (F = 1; M = 0)

#Eligible for 700
data_dwi$elig_700 # Print
data_dwi$elig_700 <- ifelse(data_dwi$elig_700 == "True", 1, 0)

## Relationship to Household members  
data_dwi$v14 # Print -> TBD because answers are multiple
# EXCLUDE - For now (because uncertain how much incremental validity this question brings to social isolation)

## Which qualification do you have
data_dwi$v73 # Print -> Multiple answers, replace with "qual"?
# EXCLUDE - For now (replace with "qual" which is only highest qualification)

## Attend any meetings/groups/classes?
data_dwi$v96 # Print -> TBD, Multiple answers
# What I did: create a sum score of how often they attended any meetings -> This will not be ideal becasue it means that people who went to two types of meetings occasionally (perhaps only yearly) will have the same score as someone who went to one meeting regularly (multiple times a week) but alas it's an approximation
# Extract numbers after the colon and sum them (ignoring standalone numbers)
data_dwi$v96modified <- sapply(strsplit(data_dwi$v96, ", "), function(x) {
  # Keep only elements that contain ':'
  valid_entries <- x[grepl(":", x)]
  # Extract ALL numbers after ":" using gsub + regmatches + gregexpr
  extracted_numbers <- as.numeric(unlist(regmatches(valid_entries, gregexpr("(?<=:)[0-9]+", valid_entries, perl = TRUE))))
  # Sum up the extracted frequencies
  sum(extracted_numbers, na.rm = TRUE)
})


## Any of the following problems with eyes?
data_dwi$v328 # Print -> Only three participants with multiple answers and one .
# What I did: 0 = No eye problem; 1-6 = 1 meaning yes, there is a problem; 7-9 = NA
v328_mapping <- c("0" = 0,
                  "1" = 1,
                  "2" = 1,
                  "3" = 1,
                  "4" = 1,
                  "5" = 1,
                  "6" = 1,
                  "7" = NA,
                  "8" = NA,
                  "9" = NA)

data_dwi$v328_modified <- v328_mapping[data_dwi$v328]
data_dwi$v328_modified <- as.numeric(data_dwi$v328_modified)

## Line read - Left eye 
data_dwi$v333 # Print -> Coded in letters, need to be transformed
# I will map A as 0 and B as 2 and so on; So a higher score should be positively correlated with outcomes "higher vision retention is positively associated with outcomes"
# Ensure all letters are uppercase and remove spaces
data_dwi$v333modified <- trimws(toupper(data_dwi$v333))
# Define the reversed mapping (J=0, I=1, ..., A=9) # did not work
reversed_mapping <- setNames(9:0, rev(LETTERS[1:10]))  
# Convert column from letters to numbers, replacing unmatched values with NA
data_dwi$v333modified <- as.numeric(reversed_mapping[data_dwi$v333modified])
table(data_dwi$v334)

## Line read - Right eye
data_dwi$v334 # Print -> Coded in letters, need to be transformed
# I will map A as 0 and B as 2 and so on; So a higher score should be positively correlated with outcomes "higher vision retention is positively associated with outcomes"
# Ensure all letters are uppercase and remove spaces
data_dwi$v334modified <- trimws(toupper(data_dwi$v334))
# Define the reversed mapping (J=0, I=1, ..., A=9)
reversed_mapping <- setNames(9:0, rev(LETTERS[1:10]))  #did not work
# Convert column from letters to numbers, replacing unmatched values with NA
data_dwi$v334modified <- as.numeric(reversed_mapping[data_dwi$v334modified])


# Line read - Both eyes
data_dwi$v335 # Print -> Coded in letters, need to be transformed
# I will map A as 0 and B as 2 and so on; So a higher score should be positively correlated with outcomes "higher vision retention is positively associated with outcomes"
# Ensure all letters are uppercase and remove spaces
data_dwi$v335modified <- trimws(toupper(data_dwi$v335))
# Define the reversed mapping (J=0, I=1, ..., A=9)
reversed_mapping <- setNames(9:0, rev(LETTERS[1:10]))  #did not work
# Convert column from letters to numbers, replacing unmatched values with NA
data_dwi$v335modified <- as.numeric(reversed_mapping[data_dwi$v335modified])


# Smoking summary             
unique(data_dwi$smoker) # Print unique values-> Coded in words, needs to be transformed 
# rank the answers by severity 'Because it is cross sectional analysis, current smoker will be ranked as worse than non current'
# Worse smoking habit with lowest score so that better smoking habits are positively correlated with outcomes
### Should I distinguish between current and past smoker? rather than one scale
smoke_mapping <- c("N/A" = NA,
                   "NULL" = NA,
                   "NA" = NA,
                   "Current smoker" = 1,
                   "Past smoker" = 2,
                   "Occasional current, at least 100" = 3,
                   "Non current, at least 100" = 4,
                   "Occasional current, less than 100" = 5,
                   "Non current, less than 100" = 6,
                   "Never smoked" = 7
)
data_dwi$smokermodified <- smoke_mapping[data_dwi$smoker]
data_dwi$smokermodified <- as.numeric(data_dwi$smokermodified)


# alcohol summary             
unique(data_dwi$alcohol) # Print -> Coded in words, needs to be transformed
# rank the answers by severity 'Because it is cross sectional analysis, current smoker will be ranked as worse than non current'
# Worse smoking habit with lowest score so that better smoking habits are positively correlated with outcomes
## Should I distinguish between current and past drinker?
alcohol_mapping <- c("N/A" = NA,
                     "NA" = NA,
                     "Drinks daily" = 1,
                     "Drink three/four times weekly" = 2,
                     "Drinks once/twice weekly" = 3,
                     "Occasional drinker" = 4,
                     "Drinks one/three times monthly" = 5,
                     "Past drinker" = 6,
                     "Non drinker" = 7)

data_dwi$alcoholmodified <- alcohol_mapping[data_dwi$alcohol]
data_dwi$alcoholmodified <- as.numeric(data_dwi$alcoholmodified)


#HADS depression category
unique(data_dwi$HADS_dep_category)  # Print -> Coded in words, needs to be transformed
HADS_mapping <- c("Null" = NA,
                  "NA" = NA,
                  "Severe" = 1,
                  "Moderate" = 2,
                  "Mild" = 3,
                  "Normal" = 4)

data_dwi$HADSmodified <- HADS_mapping[data_dwi$HADS_dep_category]
data_dwi$HADSmodified <- as.numeric(data_dwi$HADSmodified)

#highest qualification
(data_dwi$qual) # Print -> Coded in words, needs to be transformed
qual_mapping <- c("NA" = NA,
                  "None" = 1,
                  "GCSE/O-level" = 2,
                  "A-level" = 3,
                  "Degree" = 4)

data_dwi$qualmodified <- qual_mapping[data_dwi$qual]
data_dwi$qualmodified <- as.numeric(data_dwi$qualmodified)
table(data_dwi$qualmodified)

##All the variables that are numeric but have NaN as string for NAs
#####
#Height    
data_dwi$height    # Print -> Technically in numbers, so further inspection
data_dwi$height[data_dwi$height == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$height<- as.numeric(data_dwi$height)

#weight    
data_dwi$weight    # Print -> Technically in numbers, so further inspection
data_dwi$weight[data_dwi$weight == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$weight <- as.numeric(data_dwi$weight)

# Cattell 1          
data_dwi$C1.y     # Print -> Technically in numbers, so further inspection
data_dwi$C1.y[data_dwi$C1.y == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$C1.y <- as.numeric(data_dwi$C1.y)

# Cattell 2
data_dwi$C2.y       # Print -> Technically in numbers, so further inspection
data_dwi$C2.y[data_dwi$C2.y == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$C2.y <- as.numeric(data_dwi$C2.y)

#Cattell 3
data_dwi$C3.y       # Print -> Technically in numbers, so further inspection
data_dwi$C3.y[data_dwi$C3.y == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$C3.y <- as.numeric(data_dwi$C3.y)

# Cattell 4
data_dwi$C4.y       # Print -> Technically in numbers, so further inspection
data_dwi$C4.y[data_dwi$C4.y == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$C4.y <- as.numeric(data_dwi$C4.y)

# White Matter measures
data_dwi$WMHI_NORM_TIV     # Print -> Technically in numbers, so further inspection 
data_dwi$WMHI_NORM_TIV[data_dwi$WMHI_NORM_TIV == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$WMHI_NORM_TIV <- as.numeric(data_dwi$WMHI_NORM_TIV)

data_dwi$FA_mean           # Print -> Technically in numbers, so further inspection
data_dwi$FA_mean[data_dwi$FA_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$FA_mean <- as.numeric(data_dwi$FA_mean)

data_dwi$MSD_mean          # Print -> Technically in numbers, so further inspection
data_dwi$MSD_mean[data_dwi$MSD_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$MSD_mean <- as.numeric(data_dwi$MSD_mean)

data_dwi$MSK_mean  # Print -> Technically in numbers, so further inspection
data_dwi$MSK_mean[data_dwi$MSK_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$MSK_mean <- as.numeric(data_dwi$MSK_mean)

data_dwi$NDI_mean  # Print -> Technically in numbers, so further inspection
data_dwi$NDI_mean[data_dwi$NDI_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$NDI_mean <- as.numeric(data_dwi$NDI_mean)

data_dwi$ODI_mean  # Print -> Technically in numbers, so further inspection
data_dwi$ODI_mean[data_dwi$ODI_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$ODI_mean <- as.numeric(data_dwi$ODI_mean)

data_dwi$Fiso_mean # Print -> Technically in numbers, so further inspection
data_dwi$Fiso_mean[data_dwi$Fiso_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$Fiso_mean <- as.numeric(data_dwi$Fiso_mean)



######### Subset of only numeric variables #########
####################################################

ncol(data_dwi) #185
sapply(data_dwi, class) # Returns the class of each column
# Only non-numeric columns
sapply(data_dwi, class)[sapply(data_dwi,class)=="character"]

## Exclude numeric columns
num_data <- data_dwi[, sapply(data_dwi, is.numeric)]
ncol(num_data) #173 (because we excluded CCID,V14 and V73)

##Columns that were modified for future reference
grep("modified", names(num_data), value = TRUE)


################# Covariance matrix ################
####################################################

cov_matrix <- cor(num_data, use = "pairwise.complete.obs")
corrplot(cov_matrix, method = "color", type = "upper", tl.col = "black", tl.cex = 0.7)

colnames(num_data)


######## Computation of new variables for use of CFA###########
###############################################################

## BMI
num_data$BMI <- num_data$weight / ((num_data$height/100)^2) #weight in kg, height in cm
print(num_data$BMI)


######## Correction of Variables for Factors for use of CFA###########
#####################################################################
'Description: Every varaible is coded differently. Some NAs are 9 or 8 or 7 or somehing else. 
So, now I will go through all variables manually and code them so that they are uniformly coded.
I will start by listing which variables will be mapped to each factor befor re-coding them, if necessary 
The premise will be to have higher scores for healthier habits
'

#### ALCOHOL
'Variabels: alcoholmodified, v290m, v291m, v293m, v294m, v295m, v296m, v297m
'

#alcoholmodified = scale of severity of drinking habit, larger numbers are more healthy habits, i.e. non drinkers
num_data$alcoholmodified

#v290 
num_data$v290
## Recode so that 7-9 are NA
v290_mapping <- c("1" = 1, "2" = 2, "3" = 3, "4" = 4, "5" = 5,
                  "6" = 6, "7" = NA, "8" = NA, "9" = NA)

num_data$v290m <- v290_mapping[num_data$v290]
num_data$v290m <- as.numeric(num_data$v290m)

#v291
num_data$v291
## Recode so that 7-9 are NA
v291_mapping <- c("1" = 1, "2" = 2, "7" = NA, "8" = NA, "9" = NA)
num_data$v291m <- v291_mapping[as.character(num_data$v291)]
num_data$v291m <- as.numeric(num_data$v291m)

# v292 
unique(num_data$v292)
## Exclude, does not directly indicate the intensity of drinking 

#v293
unique(num_data$v293)
# Re-code, 66 = 0.5 because less than one, rest of given answers NA
v293_mapping <- c("66" = 0.5, "0" = 0, "1" = 1, "1.5" = 1.5, "2" = 2, "3" = 3, "4" = 4, 
                  "5" = 5, "6" = 6, "7" = 7, "8" = 8, "9" = 9, "10" = 10, "12" = 12, 
                  "14" = 14, "15" = 15, "18" = 18, "20" = 20, "24" = 24, "28" = 28, 
                  "30" = 30, "36" = 36, "42" = 42, "77" = NA, "88" = NA, "99" = NA)

num_data$v293minv <- v293_mapping[as.character(num_data$v293)]
num_data$v293minv <- as.numeric(num_data$v293minv)
num_data$v293m <- num_data$v293minv*-1
table(num_data$v293m)

#v294
unique(num_data$v294)
# Re-code, 66 = 0.5 because less than one, rest of given answers NA
v294_mapping <- c("66" = 0.5, "0" = 0, "1" = 1, "1.5" = 1.5, "2" = 2, "3" = 3, "4" = 4, 
                  "5" = 5, "6" = 6, "7" = 7, "8" = 8, "9" = 9, "10" = 10, "12" = 12, 
                  "14" = 14, "15" = 15, "18" = 18, "19" = 19, "20" = 20, "21" = 21, "28" = 28, 
                  "30" = 30, "77" = NA, "88" = NA, "99" = NA)

num_data$v294minv <- v294_mapping[as.character(num_data$v294)]
num_data$v294minv <- as.numeric(num_data$v294minv)
num_data$v294m <- num_data$v294minv*-1
table(num_data$v294m)

#v295 
unique(num_data$v295)
# Re-code, 66 = 0.5 because less than one, rest of given answers NA
v295_mapping <- c("66" = 0.5, "0" = 0, "0.5" = 0.5, "1" = 1, "1.5" = 1.5, "2" = 2, "2.5" = 2.5, "3" = 3, "3.5" = 3.5, "4" = 4, 
                  "5" = 5, "6" = 6, "7" = 7, "8" = 8, "9" = 9, "10" = 10, "12" = 12, "13" = 13,
                  "14" = 14, "15" = 15, "16" = 16,  "20" = 20, "21" = 21, 
                  "100" = 100, "77" = NA, "88" = NA, "99" = NA)

num_data$v295minv <- v295_mapping[as.character(num_data$v295)]
num_data$v295minv <- as.numeric(num_data$v295minv)
num_data$v295m <- num_data$v295minv*-1
table(num_data$v295m)

# v296 
sort(unique(num_data$v296))
# Re-code, 66 = 0.5 because less than one, rest of given answers NA
v296_mapping <- c("66" = 0.5, "0" = 0, "1" = 1,  "2" = 2,  "3" = 3, "4" = 4, 
                  "5" = 5, "6" = 6, "7" = 7, "8" = 8, "9" = 9, "10" = 10, "12" = 12, 
                  "14" = 14,  "21" = 21, "25" = 25, "662" = NA,
                  "77" = NA, "88" = NA, "99" = NA)

num_data$v296minv <- v296_mapping[as.character(num_data$v296)]
num_data$v296minv <- as.numeric(num_data$v296minv)
num_data$v296m <- num_data$v296minv*-1
table(num_data$v296m)

# v297
sort(unique(num_data$v297m))
# Re-code, 66 = 0.5 because less than one, rest of given answers NA, & invert answers (*-1) for better interpetabilit
v297_mapping <- c("66" = 0.5, "0" = 0, "1" = 1,  "2" = 2,  "3" = 3, "4" = 4, 
                  "5" = 5, "6" = 6, "7" = 7, "8" = 8,
                  "14" = 14, 
                  "77" = NA, "88" = NA, "99" = NA)

num_data$v297minv <- v297_mapping[as.character(num_data$v297)]
num_data$v297minv <- as.numeric(num_data$v297minv)
num_data$v297m <- num_data$v297minv*-1
table(num_data$v297m)

# v298
## Exclude for now - no added knowlege of how much they are consuming

#### BMI - invert
# BMIm
table(num_data$BMIm)
num_data$BMIm <- num_data$BMI *-1

# Depression
'Variables: additional_HADS_depressionm, HADSmodified, v422m, v639m
'
#HADSmodified - DONE, see above
sort(unique(num_data$HADSmodified))

#HADS_depression
sort(unique(num_data$HADS_depression))
# Re-code, 9999 = NA
vHD_mapping <- c( "0" = 0, "1" = 1,  "2" = 2,  "3" = 3, "4" = 4, 
                  "5" = 5, "6" = 6, "7" = 7, "8" = 8, "9" = 9, "10" = 10, "11" = 11,
                  "12" = 12, "13" = 13, "15" = 15,"17" = 17, 
                  "9999" = NA)

num_data$HADS_depressionminv <- vHD_mapping[as.character(num_data$HADS_depression)]
num_data$HADS_depressionminv <- as.numeric(num_data$HADS_depressionminv)
num_data$HADS_depressionm <- num_data$HADS_depressionminv*-1
table(num_data$HADS_depressionm)

#v422
sort(unique(num_data$v422))
# Re-code, 9 = NA
v422_mapping <- c( "1" = 1,  "2" = 2,
                   "9" = NA)

num_data$v422minv <- v422_mapping[as.character(num_data$v422)]
num_data$v422minv <- as.numeric(num_data$v422minv)
num_data$v422m <- num_data$v422minv*-1
table(num_data$v422m)

#v639
sort(unique(num_data$v639m))
#Re-code so 7-9 = NA
v639_mapping <- c( "1" = 1,  "2" = 2,
                   "7"=NA,"8"=NA,"9" = NA)

num_data$v639minv <- v639_mapping[as.character(num_data$v639)]
num_data$v639minv <- as.numeric(num_data$v639minv)
num_data$v639m <- num_data$v639minv*-1
table(num_data$v639m)

#v640
sort(unique(num_data$v640))
# Exclude for now - No direct indication of severity of depression


# Diabetes
'variables: v377, v378 (excluded, cause just age)'
num_data$v377
v377_mapping <- c( "1" = 1,  "2" = 2,
                   "7"=NA,"8"=NA,"9" = NA)

num_data$v377minv <- v377_mapping[as.character(num_data$v377)]
num_data$v377minv <- as.numeric(num_data$v377minv)
num_data$v377m <- num_data$v377minv*-1
table(num_data$v377m)


# Education
'variables: qualmodified, v74'


table(num_data$v74) #To be discussed, exclude for now (we could either subtract from current age
# to have a measuer of how many years ago its been, given there is evidence, that if it is too long ago
# it does not have en effect, or we use it as is but reverse coding)


# Hearing Problems
'variables: v336m, v337m, v338m, v339m, v344m, v345m, v346m, v347m, v620m
'

#v336
unique(num_data$v336)
#v337
#v338
#v339

# get rid of duplicate columns ot perform mutate()
names(num_data)[duplicated(names(num_data))]
names(num_data) <- make.names(names(num_data), unique = TRUE)

## Correction, so that 7/8/9 are NA, inverted

v336789_mapping <- c( "1" = 2,  "2" = 1,
                      "7"=NA,"8"=NA,"9" = NA)

num_data <- num_data %>%
  mutate(across(
    all_of(c("v336", "v337", "v338", "v339")),
    ~ as.numeric(v336789_mapping[as.character(.)]),
    .names = "{.col}m"  # creates v336m, v337m, etc.
  ))

## print to double check
cols <- c("v336m", "v337m", "v338m", "v339m")

for (col in cols) {
  cat("\nUnique values in", col, ":\n")
  print(unique(num_data[[col]]))
}
#v340
'Can it be removed?' #Exclude, difficult to interpret

#v342
'Wearing a Hearing Aid' # exclude for now, difficult to interpret, could not be wearing one but still have issues, if included this should be conditional on whether they have issues

#v344
table(num_data$v344m) 
'Number of tones heard 1-3'
v344_mapping <- c( "1" = 1,  "2" = 2,
                   "3"=3,"7"=NA, "8"=NA,"9"=NA)

num_data$v344m <- v344_mapping[as.character(num_data$v344)]
num_data$v344m <- as.numeric(num_data$v344m)

#v345
table(num_data$v345m) # same mapping as v344
num_data$v345m <- v344_mapping[as.character(num_data$v345)]
num_data$v345m <- as.numeric(num_data$v345m)

#v346
table(num_data$v346m) # isame mapping as v344
num_data$v346m <- v344_mapping[as.character(num_data$v346)]
num_data$v346m <- as.numeric(num_data$v346m)

#v347
table(num_data$v347m) #  same mapping as v344
num_data$v347m <- v344_mapping[as.character(num_data$v347)]
num_data$v347m <- as.numeric(num_data$v347m)

#v620
table(num_data$v620) 
num_data$v620m <- num_data$v620*-1
table(num_data$v620m)# okay as is

# High Blood Pressure
'variable: v349m, v352m, v354m, v629m, v632m, v634m
'
#v349
#354
# 629
#634
## Correction, so that 7/8/9 are NA, invertes 1/2

BP_mapping <- c( "1" = 2,  "2" = 1,
                 "7"=NA,"8"=NA,"9" = NA)

num_data <- num_data %>%
  mutate(across(
    all_of(c("v349", "v354", "v629", "v634")),
    ~ as.numeric(BP_mapping[as.character(.)]),
    .names = "{.col}m"  # creates v354m, v349m, etc.
  ))

## print to double check
cols <- c("v349m", "v354m", "v629m", "v634m")

for (col in cols) {
  cat("\nUnique values in", col, ":\n")
  print(unique(num_data[[col]]))
}


#632
#352
## Recode NAs
BP2_mapping <- c( "1" = 1,  "2" = 2,
                  "7"=NA, "8"=NA,"9"=NA)
#v352m
num_data$v352m <- BP2_mapping[as.character(num_data$v352)]
num_data$v352m <- as.numeric(num_data$v352m)
#v632
num_data$v632m <- BP2_mapping[as.character(num_data$v632)]
num_data$v632m <- as.numeric(num_data$v632m)

# High cholesterol
'variables: v355m
'
#v355 # invert and NAs
v355_mapping <- c( "1" = 2,  "2" = 1,
                   "7"=NA, "8"=NA,"9"=NA)

num_data$v355m <- v355_mapping[as.character(num_data$v355)]
num_data$v355m <- as.numeric(num_data$v355m)


# Physical activity
'Variables: activities_done, ACTMETS, CARadj, CARMILES, COMMUTE_METS, COMMUTE_PAEE, 
COMMUTEtime, CYCLEadj, CYCLEMILES, DURGETABOUT_BIKE, DURGETABOUT_WALK, DURJOB, DURTV, 
GETABOUT, GETABOUT_bikedist, GETABOUT_walkdist, GETABOUTBIKadj, GETABOUTWALKadj, HOME_METS, 
HOME_PAEE, HOMEtime, LEIS_METS, LEIS_PAEE, LEIStime, leisure_missing_all_data, 
leisure_missing_duration, leisure_missing_freq, LIGHT_INTENSITY, LIGHTtime, MODERATE_INTENSITY,
MODERATEtime, PAEE, PUBLICadj, PUBLICMILES, SED_INTENSITY, SEDtime, SLEEPtime, TOTALtime, 
TOTMETHRS, TOTMETHRS_w_UNACCtime, TVadj, UNACCOUNTED_TIME, VIGOROUS_INTENSITY, VIGOROUStime, 
WALKadj, WALKMILES, WORK_METS, WORK_PAEE, WORKtime'
'Potential new variables:
PAEE - physical activity energy expenditure (aggregate measure of energy burned'
#source: https://www.epic-norfolk.org.uk/2019/07/27/keeping-active-or-becoming-more-active-in-middle-and-older-age-linked-to-longer-life/
#HOME_PAEE # higher value = more burned/ healthier
num_data$HOME_PAEE
#LEIS_PAEE
num_data$LEIS_PAEE
#PAEE
num_data$PAEE
#WORK_PAEE
num_data$WORK_PAEE
#Test
num_data$LEIS_PAEE + num_data$HOME_PAEE + num_data$WORK_PAEE == num_data$PAEE # sometimes true, trying to understand whether PAEE is a composite score of all three PAEEs
'can stay the way it is with higher scores, indicating healthier lifestyle'
# Smoking
'variables: smokermodified, v241m, v242m, v244m, v245m, v247m, v251m, v252m, v253m, v255m, v256m, v259m, v260m, v261m
'
#smokermodified
table(num_data$smokermodified) # here: higher number, HEALTHIER Habit, need to recode the rest accordingly!!!
#v241 # recode so 7/8/9 are NAs
v241_mapping <- c( "1" = 1,  "2" = 2,
                   "3"=3,"7"=NA, "8"=NA,"9"=NA)

num_data$v241m <- v241_mapping[as.character(num_data$v241)]
num_data$v241m <- as.numeric(num_data$v241m)

#v242 #NA coding + rest okay, because older = "healthier" so higher number is healthier, which is ok
num_data$v242m <- num_data$v242
num_data$v242m[num_data$v242 == 777] <- NA
num_data$v242m[num_data$v242 == 888] <- NA
num_data$v242m[num_data$v242 == 999] <- NA
table(num_data$v242m)

#244 # recode for NAs
num_data$v244m <- num_data$v244
num_data$v244m[num_data$v244 == 7] <- NA
num_data$v244m[num_data$v244 == 8] <- NA
num_data$v244m[num_data$v244 == 9] <- NA
table(num_data$v244m)

#v245 # recode NAs + invert because here higher number means unhealthier habit
num_data$v245m <- num_data$v245 * -1
num_data$v245m[num_data$v245 == 66] <- 0.5
num_data$v245m[num_data$v245 == 77] <- NA
num_data$v245m[num_data$v245 == 88] <- NA
num_data$v245m[num_data$v245 == 99] <- NA # does not always work, double check

table(num_data$v245m)

#v246
## Exclude for now, would really only make sense, if calculated as how long ago in comparison to now

#247 # recode NAs + invert because here higher number means unhealthier habit
num_data$v247m <- num_data$v247 * -1
num_data$v247m[num_data$v247 == 66] <- 0.5
num_data$v247m[num_data$v247 == 77] <- NA
num_data$v247m[num_data$v247 == 88] <- NA
num_data$v247m[num_data$v247 == 99] <- NA # does not always work, double check
table(num_data$v247m)

#v249
## Exclude for now, only gives us insight in relation to how long they smoked before

## HEre below is NON-CURRENT smoker
#v251 # recode NAs
num_data$v251m <- num_data$v251 
num_data$v251m[num_data$v251 == 7] <- NA
num_data$v251m[num_data$v251 == 8] <- NA
num_data$v251m[num_data$v251 == 9] <- NA # does not always work, double check
table(num_data$v251m)

#v252 # recoded NAs
num_data$v252m <- num_data$v252 
num_data$v252m[num_data$v252 == 7] <- NA
num_data$v252m[num_data$v252 == 8] <- NA
num_data$v252m[num_data$v252 == 9] <- NA # does not always work, double check
table(num_data$v252m)

#v253
num_data$v253m <- num_data$v253
num_data$v253m[num_data$v253 == 777] <- NA
num_data$v253m[num_data$v253 == 888] <- NA
num_data$v253m[num_data$v253 == 999] <- NA
num_data$v253m[num_data$v253 == 9999] <- NA
table(num_data$v253m)

#v255 # NAs
num_data$v255m <- num_data$v255 
num_data$v255m[num_data$v255 == 7] <- NA
num_data$v255m[num_data$v255 == 8] <- NA
num_data$v255m[num_data$v255 == 9] <- NA 
table(num_data$v255m)

#v256 # NAs and invert
num_data$v256m <- num_data$v256 * -1
num_data$v256m[num_data$v256 == 77] <- NA
num_data$v256m[num_data$v256 == 88] <- NA
num_data$v256m[num_data$v256 == 99] <- NA 
num_data$v256m[num_data$v256 == 66] <- 0.5 
table(num_data$v256m)

#v257
## Exclude for now, would really only make sense, if calculated as how long ago in comparison to now

#v259 # NAs + inverted
num_data$v259m <- num_data$v259 * -1
num_data$v259m[num_data$v259 == 7] <- NA
num_data$v259m[num_data$v259 == 8] <- NA
num_data$v259m[num_data$v259 == 9] <- NA 
table(num_data$v259m)

#v260 # NAs + inverted
num_data$v260m <- num_data$v260 * -1
num_data$v260m[num_data$v260 == 777] <- NA
num_data$v260m[num_data$v260 == 888] <- NA
num_data$v260m[num_data$v260 == 999] <- NA 
table(num_data$v260m)

#v261 #Nas + inverted
num_data$v261m <- num_data$v261 * -1
num_data$v261m[num_data$v261 == 777] <- NA
num_data$v261m[num_data$v261 == 888] <- NA
num_data$v261m[num_data$v261 == 999] <- NA 
table(num_data$v261m)

# Social activities
'Variables: v5m, v86, v87m, v89, v90m, v91m,v92m,v93m,v94m, v95m, v96modified, v97m, v98m
'

#v14 # Excluded above

table(data_dwi$v14)
#v5
table(num_data$v5)
# Recode, so higher = healthier (Tbd whether divorced is better than widowed)
num_data$v5m[num_data$v5 == 1] <- 1
num_data$v5m[num_data$v5 == 2] <- 5
num_data$v5m[num_data$v5 == 3] <- 4 
num_data$v5m[num_data$v5 == 4] <- 3
num_data$v5m[num_data$v5 == 5] <- 2 
table(num_data$v5m)


#v86 # okay
#v87
table(num_data$v87) # 9999 = NA, rest is okay
num_data$v87m <- num_data$v87 
num_data$v87m[num_data$v87 == 9999] <- NA 
table(num_data$v87m)

#v89 # okay
table(num_data$v89)

#v90 # recode NAs and reorder
table(num_data$v90)
num_data$v90m <- num_data$v90 
num_data$v90m[num_data$v90 == 1] <- 1 
num_data$v90m[num_data$v90 == 2] <- 6
num_data$v90m[num_data$v90 == 3] <- 5 
num_data$v90m[num_data$v90 == 4] <- 4 
num_data$v90m[num_data$v90 == 5] <- 3 
num_data$v90m[num_data$v90 == 6] <- 2 
num_data$v90m[num_data$v90 == 7] <- NA 
num_data$v90m[num_data$v90 == 8] <- NA 
num_data$v90m[num_data$v90 == 9] <- NA 
table(num_data$v90m)


#v91 # recode
table(num_data$v91)
num_data$v91m <- num_data$v91 
num_data$v91m[num_data$v91 == 1] <- 1 
num_data$v91m[num_data$v91 == 2] <- 6
num_data$v91m[num_data$v91 == 3] <- 5 
num_data$v91m[num_data$v91 == 4] <- 4 
num_data$v91m[num_data$v91 == 5] <- 3 
num_data$v91m[num_data$v91 == 6] <- 2 
num_data$v91m[num_data$v91 == 7] <- NA 
num_data$v91m[num_data$v91 == 8] <- NA 
num_data$v91m[num_data$v91 == 9] <- NA 
table(num_data$v91m)

#v92
table(num_data$v92)
num_data$v92m <- num_data$v92
num_data$v92m[num_data$v92 == 1] <- 1 
num_data$v92m[num_data$v92 == 2] <- 6
num_data$v92m[num_data$v92 == 3] <- 5 
num_data$v92m[num_data$v92 == 4] <- 4 
num_data$v92m[num_data$v92 == 5] <- 3 
num_data$v92m[num_data$v92 == 6] <- 2 
num_data$v92m[num_data$v92 == 7] <- NA 
num_data$v92m[num_data$v92 == 8] <- NA 
num_data$v92m[num_data$v92 == 9] <- NA 
table(num_data$v92m)

#v93
table(num_data$v93)
num_data$v93m <- num_data$v93
num_data$v93m[num_data$v93 == 1] <- 6
num_data$v93m[num_data$v93 == 2] <- 5
num_data$v93m[num_data$v93 == 3] <- 4 
num_data$v93m[num_data$v93 == 4] <- 3 
num_data$v93m[num_data$v93 == 5] <- 2 
num_data$v93m[num_data$v93 == 6] <- 1 
num_data$v93m[num_data$v93 == 7] <- 7 #discuss whether highest, but it should mean that they live with them, so they see them the most, on the other hand it means small social circle 
num_data$v93m[num_data$v93 ==77] <- NA 
num_data$v93m[num_data$v93 ==88] <- NA 
table(num_data$v93m)

#v94
table(num_data$v94)
num_data$v94m <- num_data$v94
num_data$v94m[num_data$v94 == 1] <- 1 
num_data$v94m[num_data$v94 == 2] <- 6
num_data$v94m[num_data$v94 == 3] <- 5 
num_data$v94m[num_data$v94 == 4] <- 4 
num_data$v94m[num_data$v94 == 5] <- 3 
num_data$v94m[num_data$v94 == 6] <- 2 
num_data$v94m[num_data$v94 == 7] <- NA 
num_data$v94m[num_data$v94 == 8] <- NA 
num_data$v94m[num_data$v94 == 9] <- NA 
table(num_data$v94m)

#v95
table(num_data$v95)
num_data$v95m <- num_data$v95
num_data$v95m[num_data$v95 == 1] <- 1 
num_data$v95m[num_data$v95 == 2] <- 6
num_data$v95m[num_data$v95 == 3] <- 5 
num_data$v95m[num_data$v95 == 4] <- 4 
num_data$v95m[num_data$v95 == 5] <- 3 
num_data$v95m[num_data$v95 == 6] <- 2 
num_data$v95m[num_data$v95 == 7] <- NA 
num_data$v95m[num_data$v95 == 8] <- NA 
num_data$v95m[num_data$v95 == 9] <- NA 
table(num_data$v95m)
#v96modified

#okay
#v97

table(num_data$v97)
num_data$v97m <- num_data$v97
num_data$v97m[num_data$v97 == 7] <- NA 
num_data$v97m[num_data$v97 == 8] <- NA 
num_data$v97m[num_data$v97 == 9] <- NA 
table(num_data$v97m)
#v98

table(num_data$v98)
num_data$v98m <- num_data$v98
num_data$v98m[num_data$v98 == 1] <- 1 
num_data$v98m[num_data$v98 == 2] <- 6
num_data$v98m[num_data$v98 == 3] <- 5 
num_data$v98m[num_data$v98 == 4] <- 4 
num_data$v98m[num_data$v98 == 5] <- 3 
num_data$v98m[num_data$v98 == 6] <- 2
num_data$v98m[num_data$v98 == 0] <- 0 
num_data$v98m[num_data$v98 == 7] <- NA 
num_data$v98m[num_data$v98 == 8] <- NA 
num_data$v98m[num_data$v98 == 9] <- NA 
table(num_data$v98m)

# TBI 
'variables: v457m, v459m, v542m, v543m, v545m'
#v457
num_data$v457m <- num_data$v457
num_data$v457m[num_data$v457 == 1] <- 2 
num_data$v457m[num_data$v457 == 2] <- 1
num_data$v457m[num_data$v457 == 7] <- NA 
num_data$v457m[num_data$v457 == 8] <- NA 
num_data$v457m[num_data$v457 == 9] <- NA 
table(num_data$v457m)

#v459 # invert and NA
table(num_data$v459)
num_data$v459m <- num_data$v459 *-1
num_data$v459m[num_data$v459 == 9999] <- NA 
table(num_data$v459m)

#v460 # only 1 and NA for answers, so exclude, because no variation
table(num_data$v460)

#v542
num_data$v542m <- num_data$v542
num_data$v542m[num_data$v542 == 1] <- 2 
num_data$v542m[num_data$v542 == 2] <- 1
num_data$v542m[num_data$v542 == 7] <- NA 
num_data$v542m[num_data$v542 == 8] <- NA 
num_data$v542m[num_data$v542 == 9] <- NA 
table(num_data$v542m)

#v543
num_data$v543m <- num_data$v543
num_data$v543m[num_data$v543 == 1] <- 2 
num_data$v543m[num_data$v543 == 2] <- 1
num_data$v543m[num_data$v543 == 7] <- NA 
num_data$v543m[num_data$v543 == 8] <- NA 
num_data$v543m[num_data$v543 == 9] <- NA 
table(num_data$v543m)

#v544 #Exclude, unclear how to interpret, if better or worse that they fell long ago
#v545
num_data$v545m <- num_data$v545 * -1
num_data$v545m[num_data$v545 == 77] <- NA 
num_data$v545m[num_data$v545 == 88] <- NA 
num_data$v545m[num_data$v545 == 9999] <- NA 
table(num_data$v545m)

# Vision Problems
'variables: v328m, v329m, v330m, v333modified, v334modified, v335modified, v621m
'
# v 328, 333, 334, 335 are modified
#v326 # exclude, only interpretable if person has vision imparment in the first place
table(num_data$v326)

#v327 #Exclude hard to interpet, unless we know when vision impaiment set on
#v328m
# What I did: 0 = No eye problem; 1-6 = 1 meaning yes, there is a problem; 7-9 = NA
table(num_data$v328_modified)
num_data$v328m <- num_data$v328_modified 
num_data$v328m[num_data$v328_modified == 0] <- 2 
num_data$v328m[num_data$v328_modified == 1] <- 1 
table(num_data$v328m)

#v329
num_data$v329m <- num_data$v329
num_data$v329m[num_data$v329 == 1] <- 2 
num_data$v329m[num_data$v329 == 2] <- 1
num_data$v329m[num_data$v329 == 7] <- NA 
num_data$v329m[num_data$v329 == 8] <- NA 
num_data$v329m[num_data$v329 == 9] <- NA 
table(num_data$v329m)

#v330
num_data$v330m <- num_data$v330
num_data$v330m[num_data$v330 == 1] <- 2 
num_data$v330m[num_data$v330 == 2] <- 1
num_data$v330m[num_data$v330 == 7] <- NA 
num_data$v330m[num_data$v330 == 8] <- NA 
num_data$v330m[num_data$v330 == 9] <- NA 
table(num_data$v330m)

#v331 # Exclude, consent
#v332
#  exclude, only helpful ig we know if there is vision impariment

#v333modified # okay
#v334modified # okay
#v335modified # okay

#v621 # invert
table(num_data$v621)
num_data$v621m <- num_data$v621 *-1
table(num_data$v621m)

#v668 # Exclude, Hard to interpret
#v669 # Exclude Hard to interpret

# Air pollution
'currently not included'


########### COMPUTATION OF LIFESTYLE FACTORS ###########
########################################################
'Description: Given the re-coded variables, the factors will be computed for subsequent CFA'


# Alcohol
'Variabels: alcoholmodified, v290m, v291m, v293m, v294m, v295m, v296m, v297m
'

Alcohol <- num_data %>%
  select(alcoholmodified, v290m,v291m, v293m, v294m, v295m, v296m, v297m)

# BMI
'Variables: BMI'
BMI <- num_data %>%
  select(BMIm)

# Depression
'Variables: additional_HADS_depressionm, HADSmodified, v422m, v639m
'
Depression <- num_data %>%
  select(HADS_depressionm, HADSmodified, v422m, v639m)

# Diabetes
'Variables: v377'
Diabetes <- num_data %>%
  select(v377m)

# Education
'Variables: qualm'
Education <- num_data %>%
  select(qualmodified)

# Hearing Problems
'variables: v336m, v337m, v338m, v339m, v344m, v345m, v346m, v347m, v620m
'
Hearing <- num_data %>%
  select(v336m, v337m, v338m, v339m, v344m, v345m, v346m, v347m, v620)

# High Blood Pressure
'variable: v349m, v352m, v354m, v629m, v632m, v634m
' # potentially duplicates!!
BP <- num_data %>%
  select(v349m, v352m, v354m, v629m, v632m, v634m)

# High cholesterol
'Variables: v355m'
Cholesterol <- num_data %>%
  select(v355m)

# Physical activity
'variables: HOME_PAEE, LEIS_PAEE, PAEE, WORK_PAEE'
PhysicalActivity <- num_data %>%
  select(HOME_PAEE, LEIS_PAEE, PAEE, WORK_PAEE)

# Smoking
'variables:smokermodified, v241m, v242m, v244m, v245m, v247m, v251m, v252m, v253m, v255m, v256m, v259m, v260m, v261m'
Smoking <- num_data %>%
  select(smokermodified, v241m, v242m, v244m, v245m, v247m, v251m, v252m, v253m, v255m, v256m, v259m, v260m, v261m)

# Social activities
SocialIsolation <- num_data %>%
  select(v5m, v86, v87m, v89, v90m, v91m,v92m,v93m,v94m, v95m, v96modified, v97m, v98m)

# TBI 
TBI <- num_data %>%
  select( v457m, v459m, v542m, v543m, v545m)

# Vision Problems
'variables: v328m, v329m, v330m, v333modified, v334modified, v335modified, v621m
'
Vision <- num_data %>%
  select( v328m, v329m, v330m, v333modified, v334modified, v335modified, v621m)

# Air pollution
'currently excluded'

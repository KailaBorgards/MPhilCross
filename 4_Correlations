### New Correlation

############# Snaity check WM correlation ###############
#########################################################

## Test whether my computed WM Factorloadings in '3_EFA' are the same as the ones Petar sent me based on Henriques

WMpetar <- read.csv("Changed Data/RData/DWI_Factor_620People.csv")
head(WMpetar)

#inspect
WMpetar$CCID

# Currently scaled CCID in data_efa_tot, so return original state to be able to join
data_efa_tot$CCID <- pca_WM$CCIDmodified
data_efa_tot$CCID <- as.character(data_efa_tot$CCID)
data_efa_tot$CCID <- paste0("CC", data_efa_tot$CCID)



## Merge both datasets
WMcor  <- data_efa_tot %>%
  full_join(WMpetar, by = "CCID")

colnames(WMcor)

WMcor2 <- WMcor %>%
  select( WM1, WM2, WM3, Factor1, Factor2, Factor3
  )

## Perfect correlation
cor_matrix_wm <- cor(WMcor2, use = "pairwise.complete.obs", method = "pearson") 
corrplot(cor_matrix_wm, method = "color")  
# almost perfect correlation = I am fine to proceed with mine




############# Create Dataframe for Correlations ###############
###############################################################

#### Dataframes solely, with the factor loadings
## WM
wm_data <- data_efa_tot %>%
  select(WM1, WM2)

## Lifestyle
ls_data <- data_efa_tot %>%
  select( ML1, ML2, ML3, ML4, ML5, ML6)

## Cognition
cog_data <- cog_loadings_df %>%
  select(COG)

##### Factor Loadings into 1 dataset ####
cor_data  <- cbind(wm_data, cog_data, ls_data)
colnames(cor_data)

sapply(cor_data, class) 

############### Correlations ###############
############################################

vars <- colnames(cor_data)
n <- length(vars)

# Empty matrices to store results
cor_mat <- matrix(NA, n, n, dimnames = list(vars, vars))
p_mat <- matrix(NA, n, n, dimnames = list(vars, vars))

# Loop through variable pairs
for (i in 1:n) {
  for (j in i:n) {
    test <- cor.test(cor_data[[i]], cor_data[[j]], method = "pearson")
    cor_mat[i, j] <- test$estimate
    cor_mat[j, i] <- test$estimate
    p_mat[i, j] <- test$p.value
    p_mat[j, i] <- test$p.value
  }
}
## Double check symmetry
all.equal(p_mat, t(p_mat))


#############################
######### Viszualize ########
#############################

#Create a matrix of significance stars
stars_matrix <- ifelse(p_mat < 0.001, "***",
                       ifelse(p_mat < 0.01, "**",
                              ifelse(p_mat < 0.05, "*", "")))

# Melt matrices to long format
corr_melt <- melt(cor_mat)
stars_melt <- melt(stars_matrix)

# Combine into one dataframe
corr_plot_data <- merge(corr_melt, stars_melt, by = c("Var1", "Var2"))
colnames(corr_plot_data) <- c("Var1", "Var2", "Correlation", "Significance")

# reorder
desired_order <- c("ML6", "ML5", "ML4","ML3","ML2","ML1","WM2","WM1", "COG")
corr_plot_data$Var1 <- factor(corr_plot_data$Var1, levels = desired_order)
corr_plot_data$Var2 <- factor(corr_plot_data$Var2, levels = desired_order)

# Plot using ggplot2
ggplot(corr_plot_data, aes(x = Var1, y = Var2, fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
                       limits = c(-1, 1), name = "r") +
  geom_text(aes(label = paste0(round(Correlation, 2), Significance)), size = 4) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid = element_blank()) +
  labs(title = "Correlation Matrix with Significance", x = "", y = "")




## Positive paths from cor_p_combined -> Necessary for SEM
## LS and WM
'
ML1 ~ WM1
ML4 ~ WM1
ML6 ~ WM1
ML3 ~ WM2
ML4 ~ WM2
ML6 ~ WM2

'

## LS and COG
'
ML1 ~ COG
ML4 ~ COG
ML5 ~ COG
ML6 ~ COG
'

## WM and COG
'
WM1 ~ COG
WM2 ~ COG
'
## LS and LS
'
ML5 ~ ML6
ML6 ~ ML3
ML6 ~ ML4'









### Install packages
install.packages("readxl", type ="binary", dependency = TRUE)# To read Excel files
install.packages("openxlsx", type ="binary", dependency = TRUE)# To create Excel files
install.packages("dplyr", type ="binary", dependency = TRUE) # For data manipulation
install.packages("tidyr", type ="binary", dependency = TRUE) # For additional data manipulation
install.packages("psych", type ="binary", dependency = TRUE) # For additional data manipulation
install.packages("ggplot2", type ="binary", dependency = TRUE) # For additional data manipulation
install.packages("corrplot", type ="binary", dependency = TRUE) # For additional data manipulation
install.packages("lavaan", type ="binary", dependency = TRUE) # For additional data manipulation


## Import packages
library(readxl)
library(openxlsx)
library(dplyr)
library(tidyr)
library(psych)
library(ggplot2)
library(corrplot)
library (lavaan)

###### LOAD DATA (do not repeat every time)#######
########################

# Set Working directory
setwd("\\\\home/RDS_UPD$/kb02/Desktop/Kubi")
getwd()

#Load RAW DATA sheets - Homeint, additional, epaq, physiological and scq
homeint <- read_excel("Changed Data/RData/250303Lifestyle_RAW.xlsx", sheet = 1)
additional <- read_excel("Changed Data/RData/250303Lifestyle_RAW.xlsx", sheet = 2)
epaq <- read_excel("Changed Data/RData/250303Lifestyle_RAW.xlsx", sheet = 3)
scq <- read_excel("Changed Data/RData/250303Lifestyle_RAW.xlsx", sheet = 4)


#Load Cattell and Factor Loadings
WmCog_data <- read_excel("Petar send/WM_Brain_LifeStyle_Table_withOutliers.xlsx")

## Load Cardio data
cardio <- read_excel("Changed Data/cardio_measures_exported_KB.xlsx") #CCID is listed as Observations
colnames(cardio)[colnames(cardio) == "Observations"] <- "CCID" #Change of name to merge

########### MERGE DATA (do not repeat every time)###############
######################################

## Lifestyle
lifestyle_full <- homeint %>%
  full_join(additional, by = "CCID") %>%
  full_join(epaq, by = "CCID") %>%
  full_join(scq, by = "CCID") %>%
  full_join(cardio, by = "CCID")

## All variables
data_full <- homeint %>%
  full_join(additional, by = "CCID") %>%
  full_join(epaq, by = "CCID") %>%
  full_join(scq, by = "CCID") %>%
  full_join(WmCog_data, by ="CCID") %>%
  full_join(cardio, by = "CCID")

# Save merged dataset
write.xlsx(data_full, "data_compiled.xlsx")

########### READ DATA ###############
######################################

## Whole dataset
data_full <- read_excel("data_compiled.xlsx") #includes all variables
view(data_full)

## Select variables that I need based on manual selection of variables related to Livingston et al. (2024)
# Create subset 
data <- subset(data_full, select = c(CCID, sex, elig_700, mmse_i, v1,v5,v13,v14,v16,v18,v73,v74,v75,v86,v87,v89,v90,v91,v92,v93,v94,v95,v96,v97,v98,v106,v108,v241,v242,v244,v245,v246,v247,v249,v251,v252,v253,v255,v256,v257,v259,v260,v261,v290,v291,v292,v293,v294,v295,v296,v297,v298,v326,v327,v328,v329,v330,v331,v332,v333,v334,v335,v336,v337,v338,v339,v340,v341,v342,v343,v344,v345,v346,v347,v349,v350,v352,v352,v353,v354,v355,v356,v377,v378,v422,v457,v458,v459,v460,v542,v543,v544,v545,v620,v621,v624,v626,v627,v629,v630,v632,v633,v634,v639,v640,v668,v669,place,age_iv,smoker,alcohol,HADS_depression,HADS_dep_category,qual,
                                     GETABOUT_bikedist,GETABOUT_walkdist,DURGETABOUT_BIKE, DURGETABOUT_WALK,GETABOUTBIKEadj,GETABOUTWALKadj, DURGETABOUT,DURTV, TVadj, WALKMILES, CYCLEMILES, CARMILES, PUBLICMILES, CARadj, PUBLICadj, CYCLEadj, WALKadj,HOMEtime, WORKtime, DURJOB, COMMUTEtime, LEIStime, UNACCOUNTED_TIME, TOTMETHRS, TOTMETHRS_w_UNACCtime, TOTALtime, ACTMETS, SED_INTENSITY, LIGHT_INTENSITY, MODERATE_INTENSITY,VIGOROUS_INTENSITY, SLEEPtime, SEDtime, LIGHTtime, MODERATEtime, VIGOROUStime, HOME_METS, WORK_METS, LEIS_METS, COMMUTE_METS, leisure_missing_all_data, leisure_missing_freq, leisure_missing_duration, activities_done,PAEE, HOME_PAEE, WORK_PAEE,LEIS_PAEE,COMMUTE_PAEE, height, weight,
                                     C1.y,C2.y,C3.y,C4.y,
                                     WMHI_NORM_TIV, FA_mean, MSD_mean,MSK_mean, NDI_mean,ODI_mean, Fiso_mean))
## Subset of subjects that have DWI data
data_dwi <- data[complete.cases(data[, c("FA_mean", "MSD_mean", "MSK_mean", "NDI_mean", "ODI_mean", "Fiso_mean")]), ]


######## INSPECT DATA ###########
#################################

nrow(data_dwi)
ncol(data_dwi) #176             
colnames(data_dwi)
summary(data_dwi)
describe(data_dwi)

## covariance  
sapply(data_dwi, class)  # Returns the class of each column
# Only non-numeric columns
sapply(data_dwi, class)[sapply(data_dwi,class)=="character"]



'
columns that are characters:
  CCID # okay will not be used             
  sex  # needs to be transformed        
  elig_700  #okay will not be used           
  v14       # Relationship to Houselhold members    
  v73       # Which qualification do you have    
  v96       # Attend any meetings/groups/classes?
  v328      # Any of the following problems with eyes?
  v333      # Line read - Left eye        
  v334      # Line read - Right eye       
  v335      # Line read - Both eye      
  smoker    # Smoking summary       
  alcohol   # Alcohol summary
  HADS_dep_category #HADS depression category             
  qual      # Highest qualification      
  height    # Height        
  weight    # Weight          
  C1.y      # Cattell 1
  C2.y      # Cattell 2 
  C3.y      # Cattell 3        
  C4.y      # Cattell 4
  WMHI_NORM_TIV   #         
  FA_mean          
  MSD_mean         
  MSK_mean 
  NDI_mean        
  ODI_mean        
  Fiso_mean 
'

######## TRANSFORM NUMERIC DATA ###########
###########################################
'In green we have the exact question content - to be deleted later'

## Sex
data_dwi$sex # Print
data_dwi$sex <- ifelse(data_dwi$sex == "F", 1, 0) # Transform (F = 1; M = 0)

#Eligible for 700
data_dwi$elig_700 # Print
data_dwi$elig_700 <- ifelse(data_dwi$elig_700 == "True", 1, 0)

## Relationship to Household members  
data_dwi$v14 # Print -> TBD because answers are multiple
'How are the other people who live with you related to you? (YOU CAN SELECT MORE THAN ONE ANSWER) 	0. Not related
1. Husband, wife or partner 
2. Son and/or daughter (include step children) 
3. Brother and/or sister 
4. Mother and/or father 
5. Grandchild 
6. Other related 
7. Do not know
8. No answer 
'
# EXCLUDE - For now (because uncertain how much incremental validity this question brings to social isolation)

## Which qualification do you have
data_dwi$v73 # Print -> Multiple answers, replace with "qual"?
# EXCLUDE - For now (replace with "qual" which is only highest qualification)

## Attend any meetings/groups/classes?
data_dwi$v96 # Print -> TBD, Multiple answers
'
Do you attend meetings of any community, church/mosque or social groups such as WI, evening classes?
  (YOU MAY ANSWER MORE THAN ONE)
EACH QUESTION WILL BE FOLLOWED BY HOW OFTEN RATING	00. No clubs
01. Political parties
02. Trade unions (including student union)
03. Environmental groups
04. Tenants, residents group or neighbourhood watch
05. Evening classes
06. U3A
07. Other adult learning
08. Arts, music or singing group
09. Charity, volunteer or community group
11. Group for the elderly
12. Youth group (guides, scouts, youth club)
13. Women’s Institute
14. Social club (rotary, working men’s)
15. Sports club, gym, exercise group
16. Church/religious group
17. Other group or organisation 
77. Don’t know
88. No answer
99. Not asked
How often?	0. For less than yearly
1. Occasionally if unpredictably or less than monthly
2. Regularly (daily, weekly, monthly or predictably)
7. Don’t know
8. No answer
9. Not asked
'
# What I did: create a sum score of how often they attended any meetings -> This will not be ideal becasue it means that people who went to two types of meetings occasionally (perhaps only yearly) will have the same score as someone who went to one meeting regularly (multiple times a week) but alas it's an approximation
# Extract numbers after the colon and sum them (ignoring standalone numbers)
data_dwi$v96modified <- sapply(strsplit(data_dwi$v96, ", "), function(x) {
  # Keep only elements that contain ':'
  valid_entries <- x[grepl(":", x)]
  # Extract ALL numbers after ":" using gsub + regmatches + gregexpr
  extracted_numbers <- as.numeric(unlist(regmatches(valid_entries, gregexpr("(?<=:)[0-9]+", valid_entries, perl = TRUE))))
  # Sum up the extracted frequencies
  sum(extracted_numbers, na.rm = TRUE)
})


## Any of the following problems with eyes?
'Has a doctor told you that you have any of the following problems with your eyes? (YOU CAN SELECT MORE THAN ONE ANSWER) 	1. Diabetes related eye disease 
2. Glaucoma 
3. Injury OR trauma resulting in loss of vision 
4. Cataract 
5. Macular degeneration 
6. Other serious eye condition 
0. None of the above 
7. Do not know 
8. No answer
9. Not asked	If 0 (None) goto IntroHC2/HC11
'
data_dwi$v328 # Print -> Only three participants with multiple answers and one .
# What I did: 0 = No eye problem; 1-6 = 1 meaning yes, there is a problem; 7-9 = NA
v328_mapping <- c("0" = 0,
                  "1" = 1,
                  "2" = 1,
                  "3" = 1,
                  "4" = 1,
                  "5" = 1,
                  "6" = 1,
                  "7" = NA,
                  "8" = NA,
                  "9" = NA)

data_dwi$v328_modified <- v328_mapping[data_dwi$v328]
data_dwi$v328_modified <- as.numeric(data_dwi$v328_modified)

## Line read - Left eye 
data_dwi$v333 # Print -> Coded in letters, need to be transformed
'Left eye	A: Can’t read any line
B: 4.0
C: 2.0
D: 1.4
E: 1.2
F: 1.0
G: 0.8
H: 0.6
I: 0.5
J: 0.4
'
# I will map J as 0 and I as 1 and so on; So a higher score should be negatively correlated with outcomes "higher vision loss is negatively associated with outcomes"
# Ensure all letters are uppercase and remove spaces
data_dwi$v333modified <- trimws(toupper(data_dwi$v333))
# Define the reversed mapping (J=0, I=1, ..., A=9)
reversed_mapping <- setNames(9:0, rev(LETTERS[1:10]))  
# Convert column from letters to numbers, replacing unmatched values with NA
data_dwi$v333modified <- as.numeric(reversed_mapping[data_dwi$v333modified])


## Line read - Right eye
data_dwi$v334 # Print -> Coded in letters, need to be transformed
# I will map J as 0 and I as 1 and so on; So a higher score should be negatively correlated with outcomes "higher vision loss is negatively associated with outcomes"
# Ensure all letters are uppercase and remove spaces
data_dwi$v334modified <- trimws(toupper(data_dwi$v334))
# Define the reversed mapping (J=0, I=1, ..., A=9)
reversed_mapping <- setNames(9:0, rev(LETTERS[1:10]))  
# Convert column from letters to numbers, replacing unmatched values with NA
data_dwi$v334modified <- as.numeric(reversed_mapping[data_dwi$v334modified])


# Line read - Both eyes
data_dwi$v335 # Print -> Coded in letters, need to be transformed
# I will map J as 0 and I as 1 and so on; So a higher score should be negatively correlated with outcomes "higher vision loss is negatively associated with outcomes"
# Ensure all letters are uppercase and remove spaces
data_dwi$v335modified <- trimws(toupper(data_dwi$v335))
# Define the reversed mapping (J=0, I=1, ..., A=9)
reversed_mapping <- setNames(9:0, rev(LETTERS[1:10]))  
# Convert column from letters to numbers, replacing unmatched values with NA
data_dwi$v335modified <- as.numeric(reversed_mapping[data_dwi$v335modified])


# Smoking summary             
unique(data_dwi$smoker) # Print unique values-> Coded in words, needs to be transformed 
# rank the answers by severity 'Because it is cross sectional analysis, current smoker will be ranked as worse than non current'
# Worse smoking habit with lowest score so that better smoking habits are positively correlated with outcomes
### Should I distinguish between current and past smoker? rather than one scale
smoke_mapping <- c("N/A" = NA,
                   "NULL" = NA,
                   "NA" = NA,
                   "Current smoker" = 1,
                   "Past smoker" = 2,
                   "Occasional current, at least 100" = 3,
                   "Non current, at least 100" = 4,
                   "Occasional current, less than 100" = 5,
                   "Non current, less than 100" = 6,
                   "Never smoked" = 7
)
data_dwi$smokermodified <- smoke_mapping[data_dwi$smoker]
data_dwi$smokermodified <- as.numeric(data_dwi$smokermodified)


# alcohol summary             
unique(data_dwi$alcohol) # Print -> Coded in words, needs to be transformed
# rank the answers by severity 'Because it is cross sectional analysis, current smoker will be ranked as worse than non current'
# Worse smoking habit with lowest score so that better smoking habits are positively correlated with outcomes
## Should I distinguish between current and past drinker?
alcohol_mapping <- c("N/A" = NA,
                     "NA" = NA,
                     "Drinks daily" = 1,
                     "Drink three/four times weekly" = 2,
                     "Drinks once/twice weekly" = 3,
                     "Occasional drinker" = 4,
                     "Drinks one/three times monthly" = 5,
                     "Past drinker" = 6,
                     "Non drinker" = 7)

data_dwi$alcoholmodified <- alcohol_mapping[data_dwi$alcohol]
data_dwi$alcoholmodified <- as.numeric(data_dwi$alcoholmodified)


#HADS depression category
unique(data_dwi$HADS_dep_category)  # Print -> Coded in words, needs to be transformed
HADS_mapping <- c("Null" = NA,
                  "NA" = NA,
                  "Severe" = 1,
                  "Moderate" = 2,
                  "Mild" = 3,
                  "Normal" = 4)

data_dwi$HADSmodified <- HADS_mapping[data_dwi$HADS_dep_category]
data_dwi$HADSmodified <- as.numeric(data_dwi$HADSmodified)

#highest qualification
unique(data_dwi$qual) # Print -> Coded in words, needs to be transformed
qual_mapping <- c("NA" = NA,
                  "None" = 1,
                  "GCSE/o-level" = 2,
                  "A-level" = 3,
                  "Degree" = 4)

data_dwi$qualmodified <- qual_mapping[data_dwi$qual]
data_dwi$qualmodified <- as.numeric(data_dwi$qualmodified)


##All the variables that are numeric but have NaN as string for NAs
#####
#Height    
data_dwi$height    # Print -> Technically in numbers, so further inspection
data_dwi$height[data_dwi$height == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$height<- as.numeric(data_dwi$height)

#weight    
data_dwi$weight    # Print -> Technically in numbers, so further inspection
data_dwi$weight[data_dwi$weight == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$weight <- as.numeric(data_dwi$weight)

# Cattell 1          
data_dwi$C1.y     # Print -> Technically in numbers, so further inspection
data_dwi$C1.y[data_dwi$C1.y == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$C1.y <- as.numeric(data_dwi$C1.y)

# Cattell 2
data_dwi$C2.y       # Print -> Technically in numbers, so further inspection
data_dwi$C2.y[data_dwi$C2.y == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$C2.y <- as.numeric(data_dwi$C2.y)

#Cattell 3
data_dwi$C3.y       # Print -> Technically in numbers, so further inspection
data_dwi$C3.y[data_dwi$C3.y == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$C3.y <- as.numeric(data_dwi$C3.y)

# Cattell 4
data_dwi$C4.y       # Print -> Technically in numbers, so further inspection
data_dwi$C4.y[data_dwi$C4.y == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$C4.y <- as.numeric(data_dwi$C4.y)

# White Matter measures
data_dwi$WMHI_NORM_TIV     # Print -> Technically in numbers, so further inspection 
data_dwi$WMHI_NORM_TIV[data_dwi$WMHI_NORM_TIV == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$WMHI_NORM_TIV <- as.numeric(data_dwi$WMHI_NORM_TIV)

data_dwi$FA_mean           # Print -> Technically in numbers, so further inspection
data_dwi$FA_mean[data_dwi$FA_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$FA_mean <- as.numeric(data_dwi$FA_mean)

data_dwi$MSD_mean          # Print -> Technically in numbers, so further inspection
data_dwi$MSD_mean[data_dwi$MSD_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$MSD_mean <- as.numeric(data_dwi$MSD_mean)

data_dwi$MSK_mean  # Print -> Technically in numbers, so further inspection
data_dwi$MSK_mean[data_dwi$MSK_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$MSK_mean <- as.numeric(data_dwi$MSK_mean)

data_dwi$NDI_mean  # Print -> Technically in numbers, so further inspection
data_dwi$NDI_mean[data_dwi$NDI_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$NDI_mean <- as.numeric(data_dwi$NDI_mean)

data_dwi$ODI_mean  # Print -> Technically in numbers, so further inspection
data_dwi$ODI_mean[data_dwi$ODI_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$ODI_mean <- as.numeric(data_dwi$ODI_mean)

data_dwi$Fiso_mean # Print -> Technically in numbers, so further inspection
data_dwi$Fiso_mean[data_dwi$Fiso_mean == "NaN"] <- NA # So that NaN os no longer a string
data_dwi$Fiso_mean <- as.numeric(data_dwi$Fiso_mean)



######### Subset of only numeric variables #########
####################################################

ncol(data_dwi) #185
sapply(data_dwi, class) # Returns the class of each column
# Only non-numeric columns
sapply(data_dwi, class)[sapply(data_dwi,class)=="character"]

## Exclude numeric columns
num_data <- data_dwi[, sapply(data_dwi, is.numeric)]
ncol(num_data) #173 (because we excluded CCID,V14 and V73)

##Columns that were modified for future reference
grep("modified", names(num_data), value = TRUE)


################# Covariance matrix ################
####################################################

cov_matrix <- cor(num_data, use = "pairwise.complete.obs")
corrplot(cov_matrix, method = "color", type = "upper", tl.col = "black", tl.cex = 0.7)

colnames(num_data)


######## Computation of new variables for use of CFA###########
###############################################################

## BMI
num_data$BMI <- num_data$weight / ((num_data$height/100)^2) #weight in kg, height in cm
print(num_data$BMI)


######## Correction of Variables for Factors for use of CFA###########
#####################################################################
'Description: Every varaible is coded differently. Some NAs are 9 or 8 or 7 or somehing else. 
So, now I will go through all variables manually and code them so that they are uniformly coded.
I will start by listing which variables will be mapped to each factor befor re-coding them, if necessary 
'

#### ALCOHOL
'Variabels: alcoholmodified, v290m, v291m, v293m, v294, v295, v296, v297, v298
Done: alcoholmodified, v290m, v291m, v292, v293m
To Do:  v294, v295, v296, v297, v298
'

alcohol <- num_data %>%
  select(alcoholmodified, v290m, )

#alcoholmodified = scale of severity of drinking habit, larger numbers are more healthy habits, i.e. non drinkers
num_data$alcoholmodified

#v290 
num_data$v290
'About how often do you drink alcohol? 
1. Daily OR almost daily 
2. Three OR four times a week 
3. Once OR twice a week 
4. One to three times a month 
5. Special occasions only 
6. Never
7. Don’t know
8. No answer
9. Not asked
'
## Recode so that 7-9 are NA
v290_mapping <- c("1" = 1, "2" = 2, "3" = 3, "4" = 4, "5" = 5,
                  "6" = 6, "7" = NA, "8" = NA, "9" = NA)

num_data$v290m <- v290_mapping[num_data$v290]
num_data$v290m <- as.numeric(num_data$v290m)

#v291
num_data$v291
'
Did you previously drink alcohol? 
1. Yes 
2. No 
7. Don’t know
8. No answer
9. Not asked
'
## Recode so that 7-9 are NA
v291_mapping <- c("1" = 1, "2" = 2, "7" = NA, "8" = NA, "9" = NA)
num_data$v291m <- v291_mapping[as.character(num_data$v291)]
num_data$v291m <- as.numeric(num_data$v291m)

# v292 
unique(num_data$v292)
'Why did you stop drinking alcohol? 
1. Illness OR ill health 
2. Doctor’s advice 
3. Health precaution 
4. Financial reasons 
5. Other reason 
7. Do not know 
8. No answer 
9999. NA
'
## Exclude, does not directly indicate the intensity of drinking 

#v293
unique(num_data$v293)
'In an average week, how many glasses of red wine would you drink? 
Enter number OR 
66. Less than 1
77. Do not know
88. No answer 
99. Not asked
'
# Re-code, 66 = 0.5 because less than one, rest of given answers NA
v293_mapping <- c("66" = 0.5, "0" = 0, "1" = 1, "1.5" = 1.5, "2" = 2, "3" = 3, "4" = 4, 
                  "5" = 5, "6" = 6, "7" = 7, "8" = 8, "9" = 9, "10" = 10, "12" = 12, 
                  "14" = 14, "15" = 15, "18" = 18, "20" = 20, "24" = 24, "28" = 28, 
                  "30" = 30, "36" = 36, "42" = 42, "77" = NA, "88" = NA, "99" = NA)

num_data$v293m <- v293_mapping[as.character(num_data$v293)]
num_data$v293m <- as.numeric(num_data$v293m)



v293 
v294 
v295 
v296 
v297 
v298


# BMI

# Depression

# Diabetes

# Education

# Hearing Problems

# High Blood Pressure

# High cholesterol

# Physical activity

# Smoking

# Social activities

# TBI 

# Vision Problems

# Air pollution
'currently not included'


########### COMPUTATION OF LIFESTYLE FACTORS ###########
########################################################
'Description: Given the re-coded variables, the factors will be computed for subsequent CFA'


# Alcohol
'Variabels: alcohol, v290, v292, v293, v294, v295, v296, v297, v298'

alcohol <- num_data %>%
  select(alcoholmodified, v290modified, )

# Depression

# Diabetes

# Education

# Hearing Problems

# High Blood Pressure

# High cholesterol

# Physical activity

# Smoking

# Social activities

# TBI 

# Vision Problems

# Air pollution

'To Do'
## Correct the model and clean included variables 
## Perhaps create seperate factors before putting them into one models

CFA_model <-'
Alcohol =~ alcohol + v290 + v291 + v292 + v293 + v294 + v295 + v296 + v297 + v298
BMI =~ weight +height
Depression=~ HADS_depression + HADS_dep_category + v422 + v639 + v640 
Diabetes=~ v377 + v378
Education=~ qual + v73 + v74
Hearing Problems=~ v336 + v337 + v338 + v339 + v340 + v341 + v342 + v343 + v344 + v345 + v346 + v347 + v620
High Blood Pressure=~ v349 + v350 + v352 + v353 + v354 + v629 + v630 + v632 + v633 + v634 
High cholesterol=~ v355 + v356
Physical activity=~ GETABOUT_bikedist + GETABOUT_walkdist + DURGETABOUT_BIKE + DURGETABOUT_WALK + GETABOUTBIKEadj + GETABOUTWALKadj + DURGETABOUT + DURTV + TVadj + WALKMILES + CYCLEMILES + CARMILES + PUBLICMILES + CARadj + PUBLICadj + CYCLEadj + WALKadj + HOMEtime + WORKtime + DURJOB + COMMUTEtime + LEIStime + UNACCOUNTED_TIME + TOTMETHRS + TOTMETHRS_w_UNACCtime + TOTALtime + ACTMETS + SED_INTENSITY + LIGHT_INTENSITY + MODERATE_INTENSITY + VIGOROUS_INTENSITY + SLEEPtime + SEDtime + LIGHTtime + MODERATEtime + VIGOROUStime + HOME_METS + WORK_METS + LEIS_METS + COMMUTE_METS + leisure_missing_all_data + leisure_missing_freq + leisure_missing_duration + activities_done +PAEE + HOME_PAEE + WORK_PAEE + LEIS_PAEE + COMMUTE_PAEE
Smoking=~ smoker + v241 + v242 + v245 + v246 + v249 + v251 + v252 + v253 + v255 + v256 + v257 + v259 + v260 + v261 + v244 + v247
Social activities=~ v106 + v108 + v14 + v5 + v86 + v87 + v89 + v90 + v91 + v92 + v93 + v94 + v95 + v96 + v97 + v98
TBI=~ v457 + v458 + v459 + v460 + v542 + v543 + v544 + v545 
Vision Problems=~ v326 + v327 + v328+ v329 + v330 + v331 + v332 + v333 + v334 + v335 + v621 + v668 + v669

'

#Air pollution=~

## CFA
fit <- cfa(CFA_model, data = data_dwi)


### EFA ###


############## EFA for Lifestyle Factors ##############
#######################################################
 
#Factor Scores
factor_scores <- lavPredict(fit3)
#turn into dataframe
factor_scores_df <- as.data.frame(factor_scores)

#Rename
efa_data <- factor_scores_df


# Test appropriateness
KMO(efa_data)           # Kaiser-Meyer-Olkin measure
cortest.bartlett(cor(efa_data), n = nrow(efa_data))  # Bartlettâ€™s test of sphericity

## Determine number of Factors
fa.parallel(efa_data, fa = "fa", n.iter = 100) #3 but only 1 with Eigenvalue >1

# running the EFA
efa_result <- fa(efa_data, nfactors = 6, rotate = "oblimin", fm = "ml")
print(efa_result, cutoff = 0.3)  # Loadings above 0.3
## Best Metrics with 6 factors 

#visualize
fa.diagram(efa_result)


#Export to Table
loadings_df <- as.data.frame(efa_result$loadings[1:ncol(efa_data), ])
write.csv(loadings_df, "efa_loadings.csv")


################# PCA for White Matter ################
#######################################################


# Matrix of WM scores
pca_WM <- num_data[, c("WMHI_NORM_TIV", "FA_mean","MSD_mean","MSK_mean","NDI_mean","ODI_mean","Fiso_mean")]

pca_result <- prcomp(pca_WM, center = TRUE, scale. = TRUE)

summary(pca_result)

plot(pca_result, type = "l")  # Scree plot

pca_result$rotation  # Loadings matrix


pca_scores <- pca_result$x  # Each row = one participant's scores on the components
head(pca_scores)

install.packages("factoextra")
library(factoextra)

# Individuals (rows)
fviz_pca_ind(pca_result, geom.ind = "point", col.ind = "cos2", repel = TRUE)

# Variables (original predictors)
fviz_pca_var(pca_result, col.var = "contrib", repel = TRUE)


################## EFA for Cognition ##################
#######################################################

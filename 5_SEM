'currently not including any covariates besides age, maybe also Sex?'

############ SEM including Age (and only sig paths from correlation ############
################################################################################
 'include sex'

#Prep Age
poly(age,2)
age <- num_data$age_iv
age2 <- poly(age,2)
age2 <- as.data.frame(age2)
age2$agelin <- age2[, "1"]
age2$agequad <- age2[, "2"]
colnames(age2)
## 
data_sem_age <- cbind(cor_data, age2)

#Model
SEM <- '

  # Paths from lifestyle factors to WM
  WM1 ~ a1*ML1 + a2*ML4 + a3*ML6 + agelin + agequad 
  WM2 ~ a4*ML3 + a5*ML4 + a6*ML6 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM1 + b2*WM2 +
         c1*ML1 + c3*ML4+ c4*ML5 + c5*ML6 + c6 *ML3 + 
         agelin + agequad

  # Indirect effects for each ML through WM1
  ind_ML1_WM1 := a1 * b1
  ind_ML4_WM1 := a2 * b1
  ind_ML6_WM1 := a3 * b1

  # Indirect effects for each ML through WM2
  ind_ML3_WM2 := a4 * b2
  ind_ML4_WM2 := a5 * b2
  ind_ML6_WM2 := a6 * b2


  # Total indirect effects (WM1 + WM2)
  total_ind_ML4 := ind_ML4_WM1 + ind_ML4_WM2
  total_ind_ML6 := ind_ML6_WM1 + ind_ML6_WM2
 
'
SEMfit <- sem(SEM, data = data_sem_age, std.lv = TRUE)
summary(SEMfit, fit.measures = TRUE, standardized = TRUE)



#################### Paths #####################
################################################
semPaths(SEMfit, 
         what = "std",        # standardized estimates
         layout = "tree2",     # nice clean tree layout
         edge.label.cex = 1.1, # size of path labels
         sizeMan = 6,          # observed variable size
         sizeLat = 8,          # latent variable size
         nCharNodes = 0,       # show full variable names
         style = "lisrel",     # classic SEM look
         residuals = FALSE,    # hide residual arrows
         intercepts = FALSE)   # hide intercepts

# Saving it
png("sem_plot.png", width = 1000, height = 800)
semPaths(SEMfit, what = "std", layout = "tree", edge.label.cex = 1.1)
dev.off()

#################### Table ####################
################################################

parameterEstimates(SEMfit, standardized = TRUE) %>% 
  filter( op %in% c("~", ":=", "~~")) %>%
  mutate(Significance = case_when(
    pvalue < 0.001 ~ "***",
    pvalue < 0.01 ~ "**",
    pvalue < 0.05 ~ "*",
    TRUE ~ ""
  )) %>%
  select(Predictor = lhs,
         Relationship = op,
         Outcome = rhs, 
         Estimate = est,
         'Std. Est.' = std.all,
         SE = se,
         z = z,
         'p-value' = pvalue,
         Significance) %>%
  kable(format= "html", digits = 3, captio = "SEM Parameter Estimates") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = FALSE,
                position = "center")

############ SEM including Age and Sex (and only sig paths from correlation ############
################################################################################

#Prep Sex
sex <- num_data %>%
  select( sex, CCID)
sexc <- sex[!num_data$CCID %in% c("222120", "621199"), ]
sexc <- sexc[, !(names(sexc) %in% "CCID")]

## 
data_sem_sex <- cbind(cor_data, age2, sex)

#Model
SEM_sex <- '

  # Paths from lifestyle factors to WM
  WM1 ~ a1*ML1 + a2*ML4 + a3*ML6 + agelin + agequad + sex
  WM2 ~ a4*ML3 + a5*ML4 + a6*ML6 + agelin + agequad + sex

  # Paths to cognition
  COG ~ b1*WM1 + b2*WM2 +
         c1*ML1 + c3*ML4+ c4*ML5 + c5*ML6 + c6 *ML3 + 
         agelin + agequad + sex

  # Indirect effects for each ML through WM1
  ind_ML1_WM1 := a1 * b1
  ind_ML4_WM1 := a2 * b1
  ind_ML6_WM1 := a3 * b1

  # Indirect effects for each ML through WM2
  ind_ML3_WM2 := a4 * b2
  ind_ML4_WM2 := a5 * b2
  ind_ML6_WM2 := a6 * b2


  # Total indirect effects (WM1 + WM2)
  total_ind_ML4 := ind_ML4_WM1 + ind_ML4_WM2
  total_ind_ML6 := ind_ML6_WM1 + ind_ML6_WM2
 
'
SEM_sexfit <- sem(SEM_sex, data = data_sem_sex, std.lv = TRUE)
summary(SEM_sexfit, fit.measures = TRUE, standardized = TRUE)



#################### Paths #####################
################################################
semPaths(SEMfit, 
         what = "std",        # standardized estimates
         layout = "tree2",     # nice clean tree layout
         edge.label.cex = 1.1, # size of path labels
         sizeMan = 6,          # observed variable size
         sizeLat = 8,          # latent variable size
         nCharNodes = 0,       # show full variable names
         style = "lisrel",     # classic SEM look
         residuals = FALSE,    # hide residual arrows
         intercepts = FALSE)   # hide intercepts

# Saving it
png("sem_plot.png", width = 1000, height = 800)
semPaths(SEMfit, what = "std", layout = "tree", edge.label.cex = 1.1)
dev.off()

#################### Table ####################
################################################

parameterEstimates(SEMfit, standardized = TRUE) %>% 
  filter( op %in% c("~", ":=", "~~")) %>%
  mutate(Significance = case_when(
    pvalue < 0.001 ~ "***",
    pvalue < 0.01 ~ "**",
    pvalue < 0.05 ~ "*",
    TRUE ~ ""
  )) %>%
  select(Predictor = lhs,
         Relationship = op,
         Outcome = rhs, 
         Estimate = est,
         'Std. Est.' = std.all,
         SE = se,
         z = z,
         'p-value' = pvalue,
         Significance) %>%
  kable(format= "html", digits = 3, captio = "SEM Parameter Estimates") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = FALSE,
                position = "center")



######################### SEM by different Age Group #########################
##############################################################################

boxplot(age)
table(age)
# compute thirds
thirds <- quantile(age, probs = c(1/3, 2/3))
# Show the cut-off values
thirds
# Cut into thirds based on quantiles
age_group <- cut(age,
                 breaks = c(-Inf, thirds[1], thirds[2], Inf),
                 labels = c("Lower third", "Middle third", "Upper third"))

# Combine into a dataframe to view
age_thirds <- data.frame(age = age, group = age_group)
data_sem_age_thirds <- cbind(cor_data, age_thirds, age2)

## subset into different dataframes
df_lower  <- subset(data_sem_age_thirds, group == "Lower third")
df_middle <- subset(data_sem_age_thirds, group == "Middle third")
df_upper  <- subset(data_sem_age_thirds, group == "Upper third")

### Group 18- 45
#Model
SEMsub45 <- '

  # Paths from lifestyle factors to WM
  WM1 ~ a1*ML1 + a2*ML4 + a3*ML6 + agelin + agequad
  WM2 ~ a4*ML3 + a5*ML4 + a6*ML6 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM1 + b2*WM2 +
         c1*ML1 + c3*ML4+ c4*ML5 + c5*ML6 + 
         agelin + agequad

  # Indirect effects for each ML through WM1
  ind_ML1_WM1 := a1 * b1
  ind_ML4_WM1 := a2 * b1
  ind_ML6_WM1 := a3 * b1

  # Indirect effects for each ML through WM2
  ind_ML3_WM2 := a4 * b2
  ind_ML4_WM2 := a5 * b2
  ind_ML6_WM2 := a6 * b2


  # Total indirect effects (WM1 + WM2)
  total_ind_ML4 := ind_ML4_WM1 + ind_ML4_WM2
  total_ind_ML6 := ind_ML6_WM1 + ind_ML6_WM2
 
'
SEMsub45fit <- sem(SEMsub45, data = df_lower, std.lv = TRUE)
summary(SEMsub45fit, fit.measures = TRUE, standardized = TRUE)

#Not sig

### Group 46 - 66
SEMsub66 <- '

  # Paths from lifestyle factors to WM
  WM1 ~ a1*ML1 + a2*ML4 + a3*ML6 + agelin + agequad
  WM2 ~ a4*ML3 + a5*ML4 + a6*ML6 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM1 + b2*WM2 +
         c1*ML1 + c3*ML4+ c4*ML5 + c5*ML6 + 
         agelin + agequad

  # Indirect effects for each ML through WM1
  ind_ML1_WM1 := a1 * b1
  ind_ML4_WM1 := a2 * b1
  ind_ML6_WM1 := a3 * b1

  # Indirect effects for each ML through WM2
  ind_ML3_WM2 := a4 * b2
  ind_ML4_WM2 := a5 * b2
  ind_ML6_WM2 := a6 * b2


  # Total indirect effects (WM1 + WM2)
  total_ind_ML4 := ind_ML4_WM1 + ind_ML4_WM2
  total_ind_ML6 := ind_ML6_WM1 + ind_ML6_WM2
 
'
SEMsub66fit <- sem(SEMsub66, data = df_middle, std.lv = TRUE)
summary(SEMsub66fit, fit.measures = TRUE, standardized = TRUE)

# Not Sig

### Group 66 - 88
SEMsub88 <- '

  # Paths from lifestyle factors to WM
  WM1 ~ a1*ML1 + a2*ML4 + a3*ML6 + agelin + agequad
  WM2 ~ a4*ML3 + a5*ML4 + a6*ML6 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM1 + b2*WM2 +
         c1*ML1 + c3*ML4+ c4*ML5 + c5*ML6 + 
         agelin + agequad

  # Indirect effects for each ML through WM1
  ind_ML1_WM1 := a1 * b1
  ind_ML4_WM1 := a2 * b1
  ind_ML6_WM1 := a3 * b1

  # Indirect effects for each ML through WM2
  ind_ML3_WM2 := a4 * b2
  ind_ML4_WM2 := a5 * b2
  ind_ML6_WM2 := a6 * b2


  # Total indirect effects (WM1 + WM2)
  total_ind_ML4 := ind_ML4_WM1 + ind_ML4_WM2
  total_ind_ML6 := ind_ML6_WM1 + ind_ML6_WM2
 
'
SEMsub88fit <- sem(SEMsub88, data = df_upper, std.lv = TRUE)
summary(SEMsub88fit, fit.measures = TRUE, standardized = TRUE)

#Not Sig

######################### Mediation By Latent Factors #########################
###############################################################################
# WM 1 (Differences in microscopic property differences)
# Factor: 1 - Education
SEMWM1LS1 <- '

  # Paths from lifestyle factors to WM
  WM1 ~ a1*ML1 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM1 + c1*ML1 + agelin + agequad
  
  # indirect  effects 
  ind_ML1 := a1*b1

  # Total  effects 
  total_ind_ML1 := c1 + (a1*b1)
 
'
SEMWM1LS1fit <- sem(SEMWM1LS1, data = data_sem_age, se = "bootstrap",  verbose = TRUE)
summary(SEMWM1LS1fit, fit.measures = TRUE, standardized = TRUE)
# Not sig

# WM 1 (Differences in microscopic property differences)
# Factor: 4 - BP / HEaring / Vision / PA
SEMWM1LS4 <- '

  # Paths from lifestyle factors to WM
  WM1 ~ a1*ML4 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM1 + c1*ML4 + agelin + agequad
  
  # indirect  effects 
  ind_ML4 := a1*b1

  # Total  effects 
  total_ind_ML4 := c1 + (a1*b1)
 
'
SEMWM1LS4fit <- sem(SEMWM1LS4, data = data_sem_age, se = "bootstrap", verbose = TRUE)
summary(SEMWM1LS4fit, fit.measures = TRUE, standardized = TRUE)
# Significant

# WM 1 (Differences in microscopic property differences)
# Factor: 6 - Cholesterol / Diabetes
SEMWM1LS6 <- '

  # Paths from lifestyle factors to WM
  WM1 ~ a1*ML6 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM1 + c1*ML6 + agelin + agequad
  
  # indirect  effects 
  ind_ML6 := a1*b1

  # Total  effects 
  total_ind_ML6 := c1 + (a1*b1)
 
'
SEMWM1LS6fit <- sem(SEMWM1LS6, data = data_sem_age, se = "bootstrap",  verbose = TRUE)
summary(SEMWM1LS6fit, fit.measures = TRUE, standardized = TRUE)
# Not sig


# WM 2 (Free Water contribution)
# Factor: 3 - BMI
SEMWM2LS3 <- '

  # Paths from lifestyle factors to WM
  WM2 ~ a1*ML3 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM2 + c1*ML3 + agelin + agequad
  
  # indirect  effects 
  ind_ML3 := a1*b1

  # Total  effects 
  total_ind_ML3 := c1 + (a1*b1)
 
'
SEMWM2LS3fit <- sem(SEMWM2LS3, data = data_sem_age, se = "bootstrap", verbose = TRUE)
summary(SEMWM2LS3fit, fit.measures = TRUE, standardized = TRUE)
#Not sig

# WM 2 (Free Water contribution)
# Factor: 4 - BP / HEaring / Vision / PA
SEMWM2LS4 <- '

  # Paths from lifestyle factors to WM
  WM2 ~ a1*ML4 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM2 + c1*ML4 + agelin + agequad
  
  # indirect  effects 
  ind_ML4 := a1*b1

  # Total  effects 
  total_ind_ML4 := c1 + (a1*b1)
 
'
SEMWM2LS4fit <- sem(SEMWM2LS4, data = data_sem_age, se = "bootstrap", verbose = TRUE)
summary(SEMWM2LS4fit, fit.measures = TRUE, standardized = TRUE)
# Not Sig

# WM 2 (Free Water contribution)
# Factor: 6 - Cholesterol / Diabetes
SEMWM2LS6 <- '

  # Paths from lifestyle factors to WM
  WM2 ~ a1*ML6 + agelin + agequad

  # Paths to cognition
  COG ~ b1*WM2 + c1*ML6 + agelin + agequad
  
  # indirect  effects 
  ind_ML6 := a1*b1

  # Total  effects 
  total_ind_ML6 := c1 + (a1*b1)
 
'
SEMWM2LS6fit <- sem(SEMWM2LS6, data = data_sem_age, se = "bootstrap", verbose = TRUE)
summary(SEMWM2LS6fit, fit.measures = TRUE, standardized = TRUE)
## Not sig
